
/* HUD elements:
200 - wave
201 - points
202 - points modification
203, 204 - message
*/

script 90 ENTER
{
	Thing_ChangeTID(0, 1000 + PlayerNumber());
	ACS_NamedExecuteAlways("DisplayHUD", 0, PlayerNumber());
}

script 91 RESPAWN
{
  Thing_ChangeTID(0, 0);
  Thing_ChangeTID(0, 1000 + PlayerNumber());
}

script "drawPointsAlternating" ( void )
{
	int absurdAmount = 99999999;
	Delay(3 * 35);
	TakeInventory("GainedShopPoints", absurdAmount);
	TakeInventory("LostShopPoints", absurdAmount);
}

script "DisplayHUD" (int player)
{
	int previousPointsAmount = CheckInventory("ShopPoints"), currentPointsAmount;
	int absurdAmount = 99999999;
	SetHudSize(640, 480, 0);

	while(true){
		HudMessage(s:waveStatus;HUDMSG_PLAIN, 200, CR_DARKRED, 320.0, 5.0, 0);
		//HudMessage(s:"Points: ", d:previousPointsAmount; HUDMSG_PLAIN, 201, CR_GOLD, 620.2, 397.0, 0);
		
		currentPointsAmount = CheckInventory("ShopPoints");
		
		if(previousPointsAmount < currentPointsAmount){
			ACS_NamedTerminate("drawPointsAlternating", 0);
			Delay(1);
			TakeInventory("GainedShopPoints", absurdAmount);
			TakeInventory("LostShopPoints", absurdAmount);
			
			GiveInventory("GainedShopPoints", currentPointsAmount - previousPointsAmount);
			ACS_NamedExecute("drawPointsAlternating", 0);
			//HudMessage(s:"+", d:currentPointsAmount - previousPointsAmount; HUDMSG_FADEINOUT, 202, CR_SAPPHIRE, 620.2, 389.0, 0.7, 0.5);
		}else if(previousPointsAmount > currentPointsAmount){
			ACS_NamedTerminate("drawPointsAlternating", 0);
			Delay(1);
			TakeInventory("GainedShopPoints", absurdAmount);
			TakeInventory("LostShopPoints", absurdAmount);
			
			GiveInventory("LostShopPoints", previousPointsAmount - currentPointsAmount);
			ACS_NamedExecute("drawPointsAlternating", 0);
			//HudMessage(s:"-", d:previousPointsAmount - currentPointsAmount; HUDMSG_FADEINOUT, 202, CR_RED, 620.2, 405.0, 0.7, 0.5);
		}

		previousPointsAmount = currentPointsAmount;
		
		Delay(1);
	}
}


